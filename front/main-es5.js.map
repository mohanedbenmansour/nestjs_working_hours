{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/user.guard.ts","webpack:///src/app/change-time.pipe.ts","webpack:///src/app/components/add-post/add-post.component.ts","webpack:///src/app/components/add-post/add-post.component.html","webpack:///src/app/components/home-page/home-page.component.ts","webpack:///src/app/components/home-page/home-page.component.html","webpack:///src/app/components/sign-in/sign-in.component.ts","webpack:///src/app/components/sign-in/sign-in.component.html","webpack:///src/app/components/sign-up/sign-up.component.ts","webpack:///src/app/components/sign-up/sign-up.component.html","webpack:///src/app/components/view-posts/view-posts.component.ts","webpack:///src/app/components/view-posts/view-posts.component.html","webpack:///src/app/services/post.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AuthGuardService","userService","router","isLoggedIn","navigate","ChangeTimePipe","value","newValue","Number","toString","name","AddPostComponent","postService","toastrService","faTrashAlt","faExclamationTriangle","PostArray","hoursString","boucle","dayName","selectedOption","day","highValue","values","highValues","addMoreHours","initializeMatrix","i","j","addWorkingHours","console","log","createPost","subscribe","data","showSuccess","err","newPost","working_hours","push","param","start","end","slice","deleteToken","navigateByUrl","success","timeOut","logout","onClick","HomePageComponent","SignInComponent","profileForm","email","required","password","form","submitted","login","res","setToken","goToDashboard","error","statusCode","showUserError","showServerError","onSubmit","SignUpComponent","createUser","reset","get","ViewPostsComponent","readPosts","getPosts","posts","PostService","http","post","providedIn","UserService","selectedUser","noAuthHeader","headers","NoAuth","user","authCredentials","token","localStorage","setItem","getItem","removeItem","getToken","userPayload","atob","split","JSON","parse","getUserPayload","exp","Date","now","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ViewPostsComponent } from './components/view-posts/view-posts.component';\nimport { AddPostComponent } from './components/add-post/add-post.component';\nimport { HomePageComponent } from './components/home-page/home-page.component';\nimport { AuthGuardService } from './auth/user.guard';\nconst routes: Routes = [\n  { path: 'home', component: HomePageComponent },\n  {\n    path: 'addpost',\n    component: AddPostComponent,\n    canActivate: [AuthGuardService],\n  },\n  {\n    path: 'viewposts',\n    component: ViewPostsComponent,\n    canActivate: [AuthGuardService],\n  },\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'working-hours';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AddPostComponent } from './components/add-post/add-post.component';\nimport { ViewPostsComponent } from './components/view-posts/view-posts.component';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { PostService } from './services/post.service';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { ChangeTimePipe } from './change-time.pipe';\nimport { SignInComponent } from './components/sign-in/sign-in.component';\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\nimport { HomePageComponent } from './components/home-page/home-page.component';\nimport { UserService } from './services/user.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTableModule } from '@angular/material/table';\nimport { AuthGuardService } from './auth/user.guard';\n\nimport { ToastrModule } from 'ngx-toastr';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddPostComponent,\n    ViewPostsComponent,\n    ChangeTimePipe,\n    SignInComponent,\n    SignUpComponent,\n    HomePageComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MatSlideToggleModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n\n    MatIconModule,\n    MatGridListModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatCardModule,\n    MatDialogModule,\n    MatTableModule,\n    ReactiveFormsModule,\n    ToastrModule.forRoot(),\n    FontAwesomeModule,\n    MatTooltipModule,\n  ],\n  providers: [PostService, UserService, AuthGuardService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { UserService } from '../services/user.service';\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n  constructor(public userService: UserService, public router: Router) {}\n  canActivate(): boolean {\n    if (!this.userService.isLoggedIn()) {\n      this.router.navigate(['home']);\n      return false;\n    }\n    return true;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'changeTime',\n})\nexport class ChangeTimePipe implements PipeTransform {\n  transform(value: string): string {\n    let newValue = Number(value);\n    if (newValue == 12) return newValue.toString();\n    newValue -= 12;\n    return newValue.toString();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Options, LabelType } from 'ng5-slider';\nimport { posts } from '../../shared/posts';\nimport { PostService } from '../../services/post.service';\nimport { Router } from '@angular/router';\nimport { trigger, transition } from '@angular/animations';\nimport { UserService } from '../../services/user.service';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\nimport { strict } from 'assert';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-add-post',\n  templateUrl: './add-post.component.html',\n  styleUrls: ['./add-post.component.scss'],\n})\nexport class AddPostComponent implements OnInit {\n  /* fab icons */\n  faTrashAlt = faTrashAlt;\n  faExclamationTriangle = faExclamationTriangle;\n  newPost: posts;\n  PostArray: posts[] = [];\n  value1: '';\n  value3: '';\n  hoursString = '';\n  constructor(\n    private postService: PostService,\n    private router: Router,\n    private userService: UserService,\n    private toastrService: ToastrService\n  ) {}\n\n  ngOnInit(): void {\n    this.initializeMatrix();\n  }\n  /* number of iteration to generate components */\n  boucle: Array<number> = [0, 1, 2, 3, 4, 5, 6];\n  /* to dynamically generate the days of the week*/\n  dayName: Array<string> = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n  ];\n  selectedOption: Array<string> = ['', '', '', '', '', '', ''];\n  /*array of active working days */\n  day: Array<boolean> = [false, true, true, true, true, true, true];\n  /* for starting hours */\n  value: Array<String> = [];\n  /* for ending hours */\n  highValue: Array<String> = [];\n  /* for extra working hours */\n  values: String[][] = [];\n  highValues: String[][] = [];\n  /* the number of times we add extra working hours for each day */\n  addMoreHours: number[] = [];\n  /* to intialise all the values */\n  initializeMatrix() {\n    for (var i = 0; i < 7; i++) {\n      this.addMoreHours[i] = 0;\n      this.values[i] = [];\n      this.highValues[i] = [];\n      for (var j = 0; j < 3; j++) {\n        this.values[i][j] = '07:00 am';\n        this.highValues[i][j] = '09:00 pm';\n      }\n    }\n  }\n\n  onClick() {\n    this.addWorkingHours();\n    console.log(this.PostArray);\n    this.postService.createPost(this.PostArray).subscribe(\n      (data) => {\n        this.PostArray = [];\n        this.showSuccess();\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n  addWorkingHours() {\n    for (let i = 0; i < 7; i++)\n      if (this.day[i] == true) {\n        this.newPost = {\n          day: this.dayName[i],\n          working_hours: [],\n        };\n        if (this.addMoreHours[i] == 0) {\n          this.hoursString = this.values[i][0] + '-' + this.highValues[i][0];\n          this.newPost.working_hours.push(this.hoursString);\n          this.PostArray.push(this.newPost);\n        } else if (this.addMoreHours[i] == 1) {\n          this.hoursString = this.values[i][0] + '-' + this.highValues[i][0];\n          this.newPost.working_hours.push(this.hoursString);\n          this.hoursString = this.values[i][1] + '-' + this.highValues[i][1];\n          this.newPost.working_hours.push(this.hoursString);\n          this.PostArray.push(this.newPost);\n        } else {\n          this.hoursString = this.values[i][0] + '-' + this.highValues[i][0];\n          this.newPost.working_hours.push(this.hoursString);\n          this.hoursString = this.values[i][1] + '-' + this.highValues[i][1];\n          this.newPost.working_hours.push(this.hoursString);\n          this.hoursString = this.values[i][2] + '-' + this.highValues[i][2];\n          this.newPost.working_hours.push(this.hoursString);\n          this.PostArray.push(this.newPost);\n        }\n      }\n  }\n  getDay(i: number) {\n    switch (i) {\n      case 0: {\n        return 'sunday';\n      }\n      case 1: {\n        return 'monday';\n      }\n      case 2: {\n        return 'tuesday';\n      }\n      case 3: {\n        return 'wednesday';\n      }\n      case 4: {\n        return 'thursday';\n      }\n      case 5: {\n        return 'friday';\n      }\n      case 6: {\n        return 'saturday';\n      }\n    }\n  }\n  /* to add or remove extra hours */\n  addHours(param) {\n    this.addMoreHours[param]++;\n  }\n\n  removeHours(param) {\n    this.addMoreHours[param]--;\n  }\n  /* to make comparison between starting hours and ending ones */\n  checkValidEndTime(start, end) {\n    if (start.slice(6) == 'am' && end.slice(6) == 'pm') return true;\n    else if (start.slice(6) == 'pm' && end.slice(6) == 'am') return false;\n    else if (start.slice(0, 5) < end.slice(0, 5)) return true;\n    else if (start.slice(0, 5) > end.slice(0, 5)) return false;\n\n    return false;\n  }\n  logout() {\n    this.userService.deleteToken();\n\n    this.router.navigateByUrl('/home');\n  }\n  showSuccess() {\n    this.toastrService.success('post added successfully', 'success', {\n      timeOut: 2000,\n    });\n  }\n}\n","<mat-toolbar color=\"primary\" class=\".navbar\">\r\n  <h1>Add Working hours</h1>\r\n  <div class=\"spacer\"></div>\r\n  <a mat-button routerLink=\"/viewposts\" routerLinkActive=\"active\">Posts</a>\r\n\r\n  <a mat-button (click)=\"logout()\">Logout</a>\r\n</mat-toolbar>\r\n\r\n<div class=\"container d-flex justify-content-center\">\r\n  <mat-card>\r\n    <mat-card-content>\r\n      <form #workingHoursForm=\"ngForm\" (ngSubmit)=\"onClick()\">\r\n        <div class=\"row align-items-center\" *ngFor=\"let i of boucle\">\r\n          <div class=\"col-3\">\r\n            <p>{{ dayName[i] }}</p>\r\n          </div>\r\n          <div class=\"col-2\">\r\n            <mat-slide-toggle\r\n              [(ngModel)]=\"day[i]\"\r\n              color=\"primary\"\r\n              name=\"{{ i }}+slider\"\r\n            ></mat-slide-toggle>\r\n          </div>\r\n\r\n          <div class=\"col-5 d-flex flex-column\" *ngIf=\"day[i]\">\r\n            <div class=\"p-2\">\r\n              <input\r\n                type=\"text\"\r\n                [(ngModel)]=\"values[i][0]\"\r\n                maxlength=\"8\"\r\n                required\r\n                #input=\"ngModel\"\r\n                pattern=\"(0[0-9]|1[0-2]):[0-5][0-9] [ap]m\"\r\n                name=\"input0+{{ i }}\"\r\n              />\r\n\r\n              -\r\n              <input\r\n                type=\"text\"\r\n                #input1=\"ngModel\"\r\n                [(ngModel)]=\"highValues[i][0]\"\r\n                maxlength=\"8\"\r\n                required\r\n                pattern=\"(0[0-9]|1[0-2]):[0-5][0-9] [ap]m\"\r\n                name=\"input1+{{ i }}\"\r\n              />\r\n              <fa-icon\r\n                *ngIf=\"\r\n                  (input.errors?.pattern && input.touched) ||\r\n                  (input1.errors?.pattern && input1.touched) ||\r\n                  !checkValidEndTime(values[i][0], highValues[i][0])\r\n                \"\r\n                [icon]=\"faExclamationTriangle\"\r\n                matTooltip=\"time form invalid or end time > start time\"\r\n                class=\"p-1\"\r\n                style=\"color: #a94442;\"\r\n              ></fa-icon>\r\n            </div>\r\n\r\n            <div class=\"p-2\" *ngIf=\"addMoreHours[i] >= 1\">\r\n              <input\r\n                type=\"text\"\r\n                #input2=\"ngModel\"\r\n                [(ngModel)]=\"values[i][1]\"\r\n                maxlength=\"8\"\r\n                required\r\n                pattern=\"(0[0-9]|1[0-2]):[0-5][0-9] [ap]m\"\r\n                name=\"input2+{{ i }}\"\r\n              />\r\n              -\r\n              <input\r\n                type=\"text\"\r\n                #input3=\"ngModel\"\r\n                [(ngModel)]=\"highValues[i][1]\"\r\n                maxlength=\"8\"\r\n                required\r\n                pattern=\"(0[0-9]|1[0-2]):[0-5][0-9] [ap]m\"\r\n                name=\"input3+{{ i }}\"\r\n              />\r\n\r\n              <fa-icon\r\n                [icon]=\"faTrashAlt\"\r\n                (click)=\"removeHours(i)\"\r\n                class=\"p-1\"\r\n              ></fa-icon>\r\n\r\n              <fa-icon\r\n                *ngIf=\"\r\n                  (input2.errors?.pattern && input2.touched) ||\r\n                  (input3.errors?.pattern && input3.touched) ||\r\n                  !checkValidEndTime(values[i][1], highValues[i][1])\r\n                \"\r\n                [icon]=\"faExclamationTriangle\"\r\n                matTooltip=\"time form invalid or end time > start time\"\r\n                class=\"p-1\"\r\n                style=\"color: #a94442;\"\r\n              ></fa-icon>\r\n            </div>\r\n\r\n            <div class=\"p-2\" *ngIf=\"addMoreHours[i] == 2\">\r\n              <input\r\n                type=\"text\"\r\n                #input4=\"ngModel\"\r\n                [(ngModel)]=\"values[i][2]\"\r\n                maxlength=\"8\"\r\n                required\r\n                pattern=\"(0[0-9]|1[0-2]):[0-5][0-9] [ap]m\"\r\n                name=\"input4+{{ i }}\"\r\n              />\r\n              -\r\n              <input\r\n                type=\"text\"\r\n                #input5=\"ngModel\"\r\n                [(ngModel)]=\"highValues[i][2]\"\r\n                maxlength=\"8\"\r\n                required\r\n                pattern=\"(0[0-9]|1[0-2]):[0-5][0-9] [ap]m\"\r\n                name=\"input5+{{ i }}\"\r\n              />\r\n              <fa-icon\r\n                [icon]=\"faTrashAlt\"\r\n                (click)=\"removeHours(i)\"\r\n                class=\"p-1\"\r\n              ></fa-icon>\r\n              <fa-icon\r\n                *ngIf=\"\r\n                  (input4.errors?.pattern && input4.touched) ||\r\n                  (input5.errors?.pattern && input5.touched) ||\r\n                  !checkValidEndTime(values[i][2], highValues[i][2])\r\n                \"\r\n                [icon]=\"faExclamationTriangle\"\r\n                matTooltip=\"time form invalid or end time > start time\"\r\n                class=\"p-1\"\r\n                style=\"color: #a94442;\"\r\n              ></fa-icon>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-2\" *ngIf=\"day[i] && addMoreHours[i] < 2\">\r\n            <a (click)=\"addHours(i)\" color=\"primary\">add hours</a>\r\n          </div>\r\n        </div>\r\n        <button\r\n          mat-button\r\n          id=\"submit\"\r\n          [disabled]=\"!workingHoursForm.form.valid\"\r\n        >\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </mat-card-content>\r\n    <mat-card-actions> </mat-card-actions>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.scss']\n})\nexport class HomePageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container_row\">\n  <div class=\"layer1\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\n      <path\n        fill=\"#e7008a\"\n        fill-opacity=\"1\"\n        d=\"M0,160L80,154.7C160,149,320,139,480,122.7C640,107,800,85,960,90.7C1120,96,1280,128,1360,144L1440,160L1440,320L1360,320C1280,320,1120,320,960,320C800,320,640,320,480,320C320,320,160,320,80,320L0,320Z\"\n      ></path>\n    </svg>\n  </div>\n  <div class=\"layer2 text-light\">\n    <h1>working hours</h1>\n  </div>\n\n  <div class=\"text-center container\">\n    <mat-tab-group mat-align-tabs=\"center\">\n      <mat-tab label=\"signIn\"> <app-sign-in> </app-sign-in></mat-tab>\n      <mat-tab label=\"signUp\"> <app-sign-up></app-sign-up></mat-tab>\n    </mat-tab-group>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../shared/user';\nimport { Router } from '@angular/router';\nimport { UserService } from '../../services/user.service';\nimport { FormControl, Validators, FormGroup } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.scss'],\n})\nexport class SignInComponent implements OnInit {\n  profileForm = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required]),\n  });\n\n  constructor(\n    public userService: UserService,\n    private router: Router,\n    private toastrService: ToastrService\n  ) {}\n\n  serverErrorMessages: boolean;\n  submitted: boolean;\n  ngOnInit(): void {\n    // if (this.userService.isLoggedIn()) this.router.navigate(['/addpost']);\n  }\n  onSubmit(form: FormGroup) {\n    this.submitted = true;\n    this.userService.login(form.value).subscribe(\n      (res) => {\n        this.userService.setToken(res['token']);\n        this.showSuccess();\n        this.goToDashboard();\n      },\n      (err) => {\n        if (err.error.statusCode == 500) this.showUserError();\n        else this.showServerError();\n      }\n    );\n  }\n  goToDashboard() {\n    this.router.navigateByUrl('/addpost');\n  }\n\n  showSuccess() {\n    this.toastrService.success('you have signed in successfully', 'success', {\n      timeOut: 2000,\n    });\n  }\n  showServerError() {\n    this.toastrService.error(\n      'something went wrong check your password',\n      'server error',\n      {\n        timeOut: 3000,\n      }\n    );\n  }\n  showUserError() {\n    this.toastrService.error('user does not exist', 'server error', {\n      timeOut: 3000,\n    });\n  }\n}\n","<form [formGroup]=\"profileForm\" (ngSubmit)=\"onSubmit(profileForm)\">\n  <mat-form-field>\n    <mat-label>Email</mat-label>\n    <input placeholder=\"Email\" type=\"email\" matInput formControlName=\"email\" />\n    <!-- <mat-error *ngIf=\"email.invalid && email.touched\">\n      invalid email\n    </mat-error> -->\n  </mat-form-field>\n\n  <mat-form-field>\n    <mat-label>Password</mat-label>\n    <input\n      placeholder=\"Password\"\n      type=\"password\"\n      matInput\n      formControlName=\"password\"\n    />\n  </mat-form-field>\n\n  <button mat-button color=\"accent\" type=\"submit\">Submit</button>\n\n  <mat-error *ngIf=\"!profileForm.valid && submitted\"\n    >check your email and password!!</mat-error\n  >\n\n  <mat-error *ngIf=\"serverErrorMessages\">user not found</mat-error>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../services/user.service';\nimport { FormControl, Validators, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss'],\n})\nexport class SignUpComponent implements OnInit {\n  serverErrorMessages: boolean;\n  submitted: boolean;\n  profileForm = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required]),\n    name: new FormControl('', [Validators.required]),\n  });\n  ngOnInit(): void {}\n  constructor(\n    public userService: UserService,\n    private router: Router,\n    private toastrService: ToastrService\n  ) {}\n\n  onSubmit(form: FormGroup) {\n    this.submitted = true;\n    this.userService.createUser(form.value).subscribe(\n      (data) => {\n        this.showSuccess();\n        form.reset();\n      },\n      (err) => {\n        if (err.error.statusCode == 500) this.showUserError();\n        else this.showServerError();\n      }\n    );\n  }\n  get email() {\n    return this.profileForm.get('email');\n  }\n  get name() {\n    return this.profileForm.get('name');\n  }\n  get password() {\n    return this.profileForm.get('password');\n  }\n  showSuccess() {\n    this.toastrService.success('you have signed up successfully', 'success', {\n      timeOut: 2000,\n    });\n  }\n  showServerError() {\n    this.toastrService.error('something went wrong', 'server error', {\n      timeOut: 3000,\n    });\n  }\n  showUserError() {\n    this.toastrService.error('user already exists', 'server error', {\n      timeOut: 3000,\n    });\n  }\n}\n","<form\n  [formGroup]=\"profileForm\"\n  (ngSubmit)=\"profileForm.valid && onSubmit(profileForm)\"\n>\n  <mat-form-field>\n    <mat-label>Full Name</mat-label>\n    <input\n      placeholder=\"Full Name\"\n      type=\"text\"\n      matInput\n      formControlName=\"name\"\n    />\n    <mat-error *ngIf=\"name.invalid && name.touched\">\n      name required\n    </mat-error>\n  </mat-form-field>\n\n  <mat-form-field>\n    <mat-label>Email</mat-label>\n    <input placeholder=\"Email\" type=\"email\" matInput formControlName=\"email\" />\n    <mat-error *ngIf=\"email.invalid && email.touched\">\n      invalid email\n    </mat-error>\n  </mat-form-field>\n\n  <mat-form-field>\n    <mat-label>Password</mat-label>\n    <input\n      placeholder=\"Password\"\n      type=\"password\"\n      matInput\n      formControlName=\"password\"\n    />\n    <mat-error *ngIf=\"password.invalid && password.touched\">\n      password required\n    </mat-error>\n  </mat-form-field>\n\n  <button mat-button color=\"accent\" type=\"submit\">Submit</button>\n\n  <mat-error *ngIf=\"serverErrorMessages\">server error try again</mat-error>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { PostService } from '../../services/post.service';\nimport { post } from '../../shared/post';\nimport { posts } from '../../shared/posts';\nimport { UserService } from '../../services/user.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-view-posts',\n  templateUrl: './view-posts.component.html',\n  styleUrls: ['./view-posts.component.scss'],\n})\nexport class ViewPostsComponent implements OnInit {\n  posts: any;\n  constructor(\n    private postService: PostService,\n    private userService: UserService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.readPosts();\n  }\n  readPosts() {\n    this.postService.getPosts().subscribe(\n      (data) => {\n        this.posts = data;\n        console.log(data);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n  logout() {\n    this.userService.deleteToken();\n\n    this.router.navigateByUrl('/home');\n  }\n}\n","<mat-toolbar color=\"primary\" class=\".navbar\">\r\n  <h1>Add Working hours</h1>\r\n  <div class=\"spacer\"></div>\r\n  <a mat-button routerLink=\"/addpost\" routerLinkActive=\"active\">addPost</a>\r\n\r\n  <a mat-button (click)=\"logout()\">Logout</a>\r\n</mat-toolbar>\r\n<div class=\"row flex-row container\">\r\n  <div class=\"col-6 postCard\" *ngFor=\"let post of posts\">\r\n    <mat-card>\r\n      <mat-card-title> working hours</mat-card-title>\r\n\r\n      <mat-card-content *ngFor=\"let day of post.working_hours\">\r\n        <strong>{{ day.day }} :</strong>\r\n        <p *ngFor=\"let hours of day.working_hours\">{{ hours }}</p>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PostService {\n  constructor(private http: HttpClient) {}\n  createPost(post) {\n    return this.http.post('post', post);\n  }\n  getPosts() {\n    return this.http.get('post');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { User } from '../shared/user';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  selectedUser: User = {\n    email: '',\n    password: '',\n    id: '',\n  };\n  noAuthHeader = { headers: new HttpHeaders({ NoAuth: 'True' }) };\n  constructor(private http: HttpClient) {}\n  createUser(user: User) {\n    return this.http.post('auth/signup', user);\n  }\n  login(authCredentials) {\n    return this.http.post('auth/login', authCredentials, this.noAuthHeader);\n  }\n\n  getUserProfile() {\n    return this.http.get('getuser');\n  }\n  //token field\n  setToken(token: string) {\n    localStorage.setItem('token', token);\n  }\n\n  getToken() {\n    return localStorage.getItem('token');\n  }\n\n  deleteToken() {\n    localStorage.removeItem('token');\n  }\n\n  getUserPayload() {\n    let token = this.getToken();\n    if (token) {\n      let userPayload = atob(token.split('.')[1]);\n      return JSON.parse(userPayload);\n    } else return null;\n  }\n\n  isLoggedIn() {\n    let userPayload = this.getUserPayload();\n    if (userPayload) return userPayload.exp > Date.now() / 1000;\n    else return false;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}