{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/user.guard.ts","webpack:///src/app/change-time.pipe.ts","webpack:///src/app/components/add-post/add-post.component.ts","webpack:///src/app/components/add-post/add-post.component.html","webpack:///src/app/components/home-page/home-page.component.ts","webpack:///src/app/components/home-page/home-page.component.html","webpack:///src/app/components/sign-in/sign-in.component.ts","webpack:///src/app/components/sign-in/sign-in.component.html","webpack:///src/app/components/sign-up/sign-up.component.ts","webpack:///src/app/components/sign-up/sign-up.component.html","webpack:///src/app/components/view-posts/view-posts.component.ts","webpack:///src/app/components/view-posts/view-posts.component.html","webpack:///src/app/services/post.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AuthGuardService","userService","router","isLoggedIn","navigate","ChangeTimePipe","value","newValue","Number","toString","name","AddPostComponent","postService","working_hours","boucle","dayName","selectedOption","day","highValue","options","floor","ceil","step","value2","highValue2","options2","console","log","addWokringHours","createPost","subscribe","data","alert","err","i","newPost","getDay","start","end","start2","end2","push","deleteToken","navigateByUrl","logout","onClick","HomePageComponent","SignInComponent","profileForm","email","required","password","form","submitted","login","res","setToken","goToDashboard","serverErrorMessages","onSubmit","SignUpComponent","createUser","reset","get","ViewPostsComponent","readPosts","getPosts","posts","error","PostService","http","post","providedIn","UserService","selectedUser","noAuthHeader","headers","NoAuth","user","authCredentials","token","localStorage","setItem","getItem","removeItem","getToken","userPayload","atob","split","JSON","parse","getUserPayload","exp","Date","now","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ViewPostsComponent } from './components/view-posts/view-posts.component';\nimport { AddPostComponent } from './components/add-post/add-post.component';\nimport { HomePageComponent } from './components/home-page/home-page.component';\nimport { AuthGuardService } from './auth/user.guard';\nconst routes: Routes = [\n  { path: 'home', component: HomePageComponent },\n  {\n    path: 'addpost',\n    component: AddPostComponent,\n    canActivate: [AuthGuardService],\n  },\n  {\n    path: 'viewposts',\n    component: ViewPostsComponent,\n    canActivate: [AuthGuardService],\n  },\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'working-hours';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AddPostComponent } from './components/add-post/add-post.component';\nimport { ViewPostsComponent } from './components/view-posts/view-posts.component';\nimport { Ng5SliderModule } from 'ng5-slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatCardModule } from '@angular/material/card';\nimport { PostService } from './services/post.service';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { ChangeTimePipe } from './change-time.pipe';\nimport { SignInComponent } from './components/sign-in/sign-in.component';\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\nimport { HomePageComponent } from './components/home-page/home-page.component';\nimport { UserService } from './services/user.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTableModule } from '@angular/material/table';\nimport { AuthGuardService } from './auth/user.guard';\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddPostComponent,\n    ViewPostsComponent,\n    ChangeTimePipe,\n    SignInComponent,\n    SignUpComponent,\n    HomePageComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    Ng5SliderModule,\n    MatSlideToggleModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n\n    MatIconModule,\n    MatGridListModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatCardModule,\n    MatDialogModule,\n    MatTableModule,\n    ReactiveFormsModule,\n  ],\n  providers: [PostService, UserService, AuthGuardService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { UserService } from '../services/user.service';\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n  constructor(public userService: UserService, public router: Router) {}\n  canActivate(): boolean {\n    if (!this.userService.isLoggedIn()) {\n      this.router.navigate(['home']);\n      return false;\n    }\n    return true;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'changeTime',\n})\nexport class ChangeTimePipe implements PipeTransform {\n  transform(value: string): string {\n    let newValue = Number(value);\n    if (newValue == 12) return newValue.toString();\n    newValue -= 12;\n    return newValue.toString();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Options, LabelType } from 'ng5-slider';\nimport { post } from '../../shared/post';\nimport { PostService } from '../../services/post.service';\nimport { Router } from '@angular/router';\nimport { trigger, transition } from '@angular/animations';\nimport { UserService } from '../../services/user.service';\n@Component({\n  selector: 'app-add-post',\n  templateUrl: './add-post.component.html',\n  styleUrls: ['./add-post.component.scss'],\n})\nexport class AddPostComponent implements OnInit {\n  newPost: post;\n  working_hours: post[] = [];\n\n  constructor(\n    private postService: PostService,\n    private router: Router,\n    private userService: UserService\n  ) {}\n\n  ngOnInit(): void {\n    console.log(this.value[0]);\n  }\n  boucle: Array<number> = [0, 1, 2, 3, 4, 5, 6];\n  dayName: Array<string> = [\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n    'sunday',\n  ];\n  selectedOption: Array<string> = ['', '', '', '', '', '', ''];\n  day: Array<boolean> = [true, false, false, false, false, false, false];\n  value: Array<number> = [7, 7, 7, 7, 7, 7, 7];\n  highValue: Array<number> = [10, 10, 10, 10, 10, 10, 10];\n  options: Options = {\n    floor: 6,\n    ceil: 12,\n    step: 0.5,\n  };\n  value2: Array<number> = [14, 14, 14, 14, 14, 14, 14];\n  highValue2: Array<number> = [16, 16, 16, 16, 16, 16, 16];\n  options2: Options = {\n    floor: 12,\n    ceil: 19,\n    step: 0.5,\n  };\n  onClick() {\n    this.addWokringHours();\n    console.log(this.working_hours);\n    this.postService.createPost(this.working_hours).subscribe(\n      (data) => {\n        this.working_hours = [];\n        alert('Post added successfully');\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n  addWokringHours() {\n    for (let i = 0; i < 7; i++)\n      if (this.day[i] == true) {\n        if (this.selectedOption[i] == 'morning') {\n          this.newPost = {\n            day: this.getDay(i),\n            start: this.value[i].toString(),\n            end: this.highValue[i].toString(),\n            start2: null,\n            end2: null,\n          };\n          this.working_hours.push(this.newPost);\n        } else if (this.selectedOption[i] == 'afternoon') {\n          this.newPost = {\n            day: this.getDay(i),\n            start: null,\n            end: null,\n            start2: this.value2[i].toString(),\n            end2: this.highValue2[i].toString(),\n          };\n          this.working_hours.push(this.newPost);\n        } else if (this.selectedOption[i] == 'doubleshift') {\n          this.newPost = {\n            day: this.getDay(i),\n            start: this.value[i].toString(),\n            end: this.highValue[i].toString(),\n            start2: this.value2[i].toString(),\n            end2: this.highValue2[i].toString(),\n          };\n          this.working_hours.push(this.newPost);\n        }\n      }\n  }\n  getDay(i: number) {\n    switch (i) {\n      case 0: {\n        return 'monday';\n      }\n      case 1: {\n        return 'tuesday';\n      }\n      case 2: {\n        return 'wednesday';\n      }\n      case 3: {\n        return 'thursday';\n      }\n      case 4: {\n        return 'friday';\n      }\n      case 5: {\n        return 'saturday';\n      }\n      case 6: {\n        return 'sunday';\n      }\n    }\n  }\n  logout() {\n    this.userService.deleteToken();\n\n    this.router.navigateByUrl('/home');\n  }\n}\n","<div class=\"container_row\">\r\n  <div class=\"layer1\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\r\n      <path\r\n        fill=\"#e7008a\"\r\n        fill-opacity=\"1\"\r\n        d=\"M0,32L48,42.7C96,53,192,75,288,101.3C384,128,480,160,576,160C672,160,768,128,864,117.3C960,107,1056,117,1152,122.7C1248,128,1344,128,1392,128L1440,128L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z\"\r\n      ></path>\r\n    </svg>\r\n  </div>\r\n  <div class=\"layer2\">\r\n    <nav>\r\n      <ul>\r\n        <li><a routerLink=\"/viewposts\">view Posts</a></li>\r\n        <li><a (click)=\"logout()\">Logout</a></li>\r\n      </ul>\r\n    </nav>\r\n  </div>\r\n</div>\r\n<h1 class=\"text-center m-5\">Add Working hours</h1>\r\n\r\n<div class=\"container d-flex justify-content-center\">\r\n  <mat-card>\r\n    <mat-card-content>\r\n      <div class=\"row\" *ngFor=\"let i of boucle\">\r\n        <div class=\"col-3\">\r\n          <mat-slide-toggle [(ngModel)]=\"day[i]\">{{\r\n            dayName[i]\r\n          }}</mat-slide-toggle>\r\n        </div>\r\n\r\n        <div class=\"col-3\" *ngIf=\"day[i]\">\r\n          <mat-select\r\n            placeholder=\"select option\"\r\n            [(ngModel)]=\"selectedOption[i]\"\r\n          >\r\n            <mat-option value=\"morning\">morning</mat-option>\r\n            <mat-option value=\"afternoon\">afternoon </mat-option>\r\n            <mat-option value=\"doubleshift\">double shift</mat-option>\r\n          </mat-select>\r\n        </div>\r\n        <div class=\"col-6\" *ngIf=\"selectedOption[i] && day[i]\">\r\n          <div\r\n            class=\"custom-slider\"\r\n            *ngIf=\"\r\n              selectedOption[i] == 'morning' ||\r\n              selectedOption[i] == 'doubleshift'\r\n            \"\r\n          >\r\n            <ng5-slider\r\n              [(value)]=\"value[i]\"\r\n              [(highValue)]=\"highValue[i]\"\r\n              [options]=\"options\"\r\n            ></ng5-slider>\r\n          </div>\r\n          <div\r\n            class=\"custom-slider\"\r\n            *ngIf=\"\r\n              selectedOption[i] == 'afternoon' ||\r\n              selectedOption[i] == 'doubleshift'\r\n            \"\r\n          >\r\n            <ng5-slider\r\n              [(value)]=\"value2[i]\"\r\n              [(highValue)]=\"highValue2[i]\"\r\n              [options]=\"options2\"\r\n            ></ng5-slider>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <button mat-button (click)=\"onClick()\" id=\"submit\">Submit</button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.scss']\n})\nexport class HomePageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container_row\">\n  <div class=\"layer1\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\n      <path\n        fill=\"#e7008a\"\n        fill-opacity=\"1\"\n        d=\"M0,160L80,154.7C160,149,320,139,480,122.7C640,107,800,85,960,90.7C1120,96,1280,128,1360,144L1440,160L1440,320L1360,320C1280,320,1120,320,960,320C800,320,640,320,480,320C320,320,160,320,80,320L0,320Z\"\n      ></path>\n    </svg>\n  </div>\n  <div class=\"layer2 text-light\">\n    <h1>working hours</h1>\n  </div>\n\n  <div class=\"text-center container\">\n    <mat-tab-group mat-align-tabs=\"center\">\n      <mat-tab label=\"signIn\"> <app-sign-in> </app-sign-in></mat-tab>\n      <mat-tab label=\"signUp\"> <app-sign-up></app-sign-up></mat-tab>\n    </mat-tab-group>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../shared/user';\nimport { Router } from '@angular/router';\nimport { UserService } from '../../services/user.service';\nimport { FormControl, Validators, FormGroup } from '@angular/forms';\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.scss'],\n})\nexport class SignInComponent implements OnInit {\n  profileForm = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required]),\n  });\n\n  constructor(public userService: UserService, private router: Router) {}\n\n  serverErrorMessages: boolean;\n  submitted: boolean;\n  ngOnInit(): void {\n    // if (this.userService.isLoggedIn()) this.router.navigate(['/addpost']);\n  }\n  onSubmit(form: FormGroup) {\n    this.submitted = true;\n    this.userService.login(form.value).subscribe(\n      (res) => {\n        this.userService.setToken(res['token']);\n\n        alert('welcome to your profile');\n        this.goToDashboard();\n      },\n      (err) => {\n        this.serverErrorMessages = true;\n        console.log(err);\n      }\n    );\n  }\n  goToDashboard() {\n    this.router.navigateByUrl('/addpost');\n  }\n  logout() {}\n}\n","<form [formGroup]=\"profileForm\" (ngSubmit)=\"onSubmit(profileForm)\">\n  <mat-form-field>\n    <mat-label>Email</mat-label>\n    <input placeholder=\"Email\" type=\"email\" matInput formControlName=\"email\" />\n    <!-- <mat-error *ngIf=\"email.invalid && email.touched\">\n      invalid email\n    </mat-error> -->\n  </mat-form-field>\n\n  <mat-form-field>\n    <mat-label>Password</mat-label>\n    <input\n      placeholder=\"Password\"\n      type=\"password\"\n      matInput\n      formControlName=\"password\"\n    />\n  </mat-form-field>\n\n  <button mat-button color=\"accent\" type=\"submit\">Submit</button>\n\n  <mat-error *ngIf=\"!profileForm.valid && submitted\"\n    >check your input!!</mat-error\n  >\n\n  <mat-error *ngIf=\"serverErrorMessages\">user not found</mat-error>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../services/user.service';\nimport { FormControl, Validators, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss'],\n})\nexport class SignUpComponent implements OnInit {\n  serverErrorMessages: boolean;\n  submitted: boolean;\n  profileForm = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required]),\n    name: new FormControl('', [Validators.required]),\n  });\n  ngOnInit(): void {}\n  constructor(public userService: UserService, private router: Router) {}\n\n  onSubmit(form: FormGroup) {\n    this.submitted = true;\n    this.userService.createUser(form.value).subscribe(\n      (data) => {\n        alert('you have signed up successfully');\n        form.reset();\n      },\n      (err) => {\n        console.log(form.value);\n        this.serverErrorMessages = true;\n      }\n    );\n  }\n  get email() {\n    return this.profileForm.get('email');\n  }\n  get name() {\n    return this.profileForm.get('name');\n  }\n  get password() {\n    return this.profileForm.get('password');\n  }\n}\n","<form\n  [formGroup]=\"profileForm\"\n  (ngSubmit)=\"profileForm.valid && onSubmit(profileForm)\"\n>\n  <mat-form-field>\n    <mat-label>Full Name</mat-label>\n    <input\n      placeholder=\"Full Name\"\n      type=\"text\"\n      matInput\n      formControlName=\"name\"\n    />\n    <mat-error *ngIf=\"name.invalid && name.touched\">\n      name required\n    </mat-error>\n  </mat-form-field>\n\n  <mat-form-field>\n    <mat-label>Email</mat-label>\n    <input placeholder=\"Email\" type=\"email\" matInput formControlName=\"email\" />\n    <mat-error *ngIf=\"email.invalid && email.touched\">\n      invalid email\n    </mat-error>\n  </mat-form-field>\n\n  <mat-form-field>\n    <mat-label>Password</mat-label>\n    <input\n      placeholder=\"Password\"\n      type=\"password\"\n      matInput\n      formControlName=\"password\"\n    />\n    <mat-error *ngIf=\"password.invalid && password.touched\">\n      password required\n    </mat-error>\n  </mat-form-field>\n\n  <button mat-button color=\"accent\" type=\"submit\">Submit</button>\n\n  <mat-error *ngIf=\"serverErrorMessages\">server error try again</mat-error>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { PostService } from '../../services/post.service';\nimport { post } from '../../shared/post';\nimport { posts } from '../../shared/posts';\n@Component({\n  selector: 'app-view-posts',\n  templateUrl: './view-posts.component.html',\n  styleUrls: ['./view-posts.component.scss'],\n})\nexport class ViewPostsComponent implements OnInit {\n  posts: any;\n  constructor(private postService: PostService) {}\n\n  ngOnInit(): void {\n    this.readPosts();\n  }\n  readPosts() {\n    this.postService.getPosts().subscribe(\n      (data) => {\n        this.posts = data;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n}\n","<div class=\"row flex-row container\">\r\n  <div class=\"col-6 postCard\" *ngFor=\"let post of posts\">\r\n    <mat-card>\r\n      <mat-card-title> working hours</mat-card-title>\r\n\r\n      <mat-card-content *ngFor=\"let pp of post.working_hours\">\r\n        <p *ngIf=\"pp.start && !pp.start2\">\r\n          <strong>{{ pp.day }} :</strong> {{ pp.start }} am ---->{{ pp.end }} am\r\n        </p>\r\n        <p *ngIf=\"pp.start2 && !pp.start\">\r\n          <strong>{{ pp.day }} :</strong> {{ pp.start2 | changeTime }} pm\r\n          ---->{{ pp.end2 | changeTime }}\r\n          pm\r\n        </p>\r\n        <p *ngIf=\"pp.start2 && pp.start\">\r\n          <strong>{{ pp.day }} :</strong> {{ pp.start }} am -->{{ pp.end }} am\r\n          <strong>AND</strong> {{ pp.start2 | changeTime }} pm -->{{\r\n            pp.end2 | changeTime\r\n          }}\r\n          pm\r\n        </p>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PostService {\n  constructor(private http: HttpClient) {}\n  createPost(post) {\n    return this.http.post('post', post);\n  }\n  getPosts() {\n    return this.http.get('post');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { User } from '../shared/user';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  selectedUser: User = {\n    email: '',\n    password: '',\n    id: '',\n  };\n  noAuthHeader = { headers: new HttpHeaders({ NoAuth: 'True' }) };\n  constructor(private http: HttpClient) {}\n  createUser(user: User) {\n    return this.http.post('auth/signup', user);\n  }\n  login(authCredentials) {\n    return this.http.post('auth/login', authCredentials, this.noAuthHeader);\n  }\n\n  getUserProfile() {\n    return this.http.get('getuser');\n  }\n  //token field\n  setToken(token: string) {\n    localStorage.setItem('token', token);\n  }\n\n  getToken() {\n    return localStorage.getItem('token');\n  }\n\n  deleteToken() {\n    localStorage.removeItem('token');\n  }\n\n  getUserPayload() {\n    let token = this.getToken();\n    if (token) {\n      let userPayload = atob(token.split('.')[1]);\n      return JSON.parse(userPayload);\n    } else return null;\n  }\n\n  isLoggedIn() {\n    let userPayload = this.getUserPayload();\n    if (userPayload) return userPayload.exp > Date.now() / 1000;\n    else return false;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}