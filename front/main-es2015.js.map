{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/user.guard.ts","./src/app/change-time.pipe.ts","./src/app/components/add-post/add-post.component.ts","./src/app/components/add-post/add-post.component.html","./src/app/components/home-page/home-page.component.ts","./src/app/components/home-page/home-page.component.html","./src/app/components/sign-in/sign-in.component.ts","./src/app/components/sign-in/sign-in.component.html","./src/app/components/sign-up/sign-up.component.ts","./src/app/components/sign-up/sign-up.component.html","./src/app/components/view-posts/view-posts.component.ts","./src/app/components/view-posts/view-posts.component.html","./src/app/services/post.service.ts","./src/app/services/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ViewPostsComponent } from './components/view-posts/view-posts.component';\nimport { AddPostComponent } from './components/add-post/add-post.component';\nimport { HomePageComponent } from './components/home-page/home-page.component';\nimport { AuthGuardService } from './auth/user.guard';\nconst routes: Routes = [\n  { path: 'home', component: HomePageComponent },\n  {\n    path: 'addpost',\n    component: AddPostComponent,\n    canActivate: [AuthGuardService],\n  },\n  {\n    path: 'viewposts',\n    component: ViewPostsComponent,\n    canActivate: [AuthGuardService],\n  },\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'working-hours';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AddPostComponent } from './components/add-post/add-post.component';\nimport { ViewPostsComponent } from './components/view-posts/view-posts.component';\nimport { Ng5SliderModule } from 'ng5-slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { PostService } from './services/post.service';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { ChangeTimePipe } from './change-time.pipe';\nimport { SignInComponent } from './components/sign-in/sign-in.component';\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\nimport { HomePageComponent } from './components/home-page/home-page.component';\nimport { UserService } from './services/user.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTableModule } from '@angular/material/table';\nimport { AuthGuardService } from './auth/user.guard';\n\nimport { ToastrModule } from 'ngx-toastr';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddPostComponent,\n    ViewPostsComponent,\n    ChangeTimePipe,\n    SignInComponent,\n    SignUpComponent,\n    HomePageComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    Ng5SliderModule,\n    MatSlideToggleModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n\n    MatIconModule,\n    MatGridListModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatCardModule,\n    MatDialogModule,\n    MatTableModule,\n    ReactiveFormsModule,\n    ToastrModule.forRoot(),\n  ],\n  providers: [PostService, UserService, AuthGuardService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { UserService } from '../services/user.service';\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n  constructor(public userService: UserService, public router: Router) {}\n  canActivate(): boolean {\n    if (!this.userService.isLoggedIn()) {\n      this.router.navigate(['home']);\n      return false;\n    }\n    return true;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'changeTime',\n})\nexport class ChangeTimePipe implements PipeTransform {\n  transform(value: string): string {\n    let newValue = Number(value);\n    if (newValue == 12) return newValue.toString();\n    newValue -= 12;\n    return newValue.toString();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Options, LabelType } from 'ng5-slider';\nimport { post } from '../../shared/post';\nimport { PostService } from '../../services/post.service';\nimport { Router } from '@angular/router';\nimport { trigger, transition } from '@angular/animations';\nimport { UserService } from '../../services/user.service';\n@Component({\n  selector: 'app-add-post',\n  templateUrl: './add-post.component.html',\n  styleUrls: ['./add-post.component.scss'],\n})\nexport class AddPostComponent implements OnInit {\n  newPost: post;\n  working_hours: post[] = [];\n\n  constructor(\n    private postService: PostService,\n    private router: Router,\n    private userService: UserService\n  ) {}\n\n  ngOnInit(): void {\n    console.log(this.value[0]);\n  }\n  boucle: Array<number> = [0, 1, 2, 3, 4, 5, 6];\n  dayName: Array<string> = [\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n    'sunday',\n  ];\n  selectedOption: Array<string> = ['', '', '', '', '', '', ''];\n  day: Array<boolean> = [true, false, false, false, false, false, false];\n  value: Array<number> = [7, 7, 7, 7, 7, 7, 7];\n  highValue: Array<number> = [10, 10, 10, 10, 10, 10, 10];\n  options: Options = {\n    floor: 6,\n    ceil: 12,\n    step: 0.5,\n  };\n  value2: Array<number> = [14, 14, 14, 14, 14, 14, 14];\n  highValue2: Array<number> = [16, 16, 16, 16, 16, 16, 16];\n  options2: Options = {\n    floor: 12,\n    ceil: 19,\n    step: 0.5,\n  };\n  onClick() {\n    this.addWokringHours();\n    console.log(this.working_hours);\n    this.postService.createPost(this.working_hours).subscribe(\n      (data) => {\n        this.working_hours = [];\n        alert('Post added successfully');\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n  addWokringHours() {\n    for (let i = 0; i < 7; i++)\n      if (this.day[i] == true) {\n        if (this.selectedOption[i] == 'morning') {\n          this.newPost = {\n            day: this.getDay(i),\n            start: this.value[i].toString(),\n            end: this.highValue[i].toString(),\n            start2: null,\n            end2: null,\n          };\n          this.working_hours.push(this.newPost);\n        } else if (this.selectedOption[i] == 'afternoon') {\n          this.newPost = {\n            day: this.getDay(i),\n            start: null,\n            end: null,\n            start2: this.value2[i].toString(),\n            end2: this.highValue2[i].toString(),\n          };\n          this.working_hours.push(this.newPost);\n        } else if (this.selectedOption[i] == 'doubleshift') {\n          this.newPost = {\n            day: this.getDay(i),\n            start: this.value[i].toString(),\n            end: this.highValue[i].toString(),\n            start2: this.value2[i].toString(),\n            end2: this.highValue2[i].toString(),\n          };\n          this.working_hours.push(this.newPost);\n        }\n      }\n  }\n  getDay(i: number) {\n    switch (i) {\n      case 0: {\n        return 'monday';\n      }\n      case 1: {\n        return 'tuesday';\n      }\n      case 2: {\n        return 'wednesday';\n      }\n      case 3: {\n        return 'thursday';\n      }\n      case 4: {\n        return 'friday';\n      }\n      case 5: {\n        return 'saturday';\n      }\n      case 6: {\n        return 'sunday';\n      }\n    }\n  }\n  logout() {\n    this.userService.deleteToken();\n\n    this.router.navigateByUrl('/home');\n  }\n}\n","<mat-toolbar color=\"primary\" class=\".navbar\">\r\n  <h1>Add Working hours</h1>\r\n  <div class=\"spacer\"></div>\r\n  <a mat-button routerLink=\"/viewposts\" routerLinkActive=\"active\">Posts</a>\r\n\r\n  <a mat-button (click)=\"logout()\">Logout</a>\r\n</mat-toolbar>\r\n\r\n<div class=\"container d-flex justify-content-center\">\r\n  <mat-card>\r\n    <mat-card-content>\r\n      <div class=\"row\" *ngFor=\"let i of boucle\">\r\n        <div class=\"col-3\">\r\n          <mat-slide-toggle [(ngModel)]=\"day[i]\">{{\r\n            dayName[i]\r\n          }}</mat-slide-toggle>\r\n        </div>\r\n\r\n        <div class=\"col-3\" *ngIf=\"day[i]\">\r\n          <mat-select\r\n            placeholder=\"select option\"\r\n            [(ngModel)]=\"selectedOption[i]\"\r\n          >\r\n            <mat-option value=\"morning\">morning</mat-option>\r\n            <mat-option value=\"afternoon\">afternoon </mat-option>\r\n            <mat-option value=\"doubleshift\">double shift</mat-option>\r\n          </mat-select>\r\n        </div>\r\n        <div class=\"col-6\" *ngIf=\"selectedOption[i] && day[i]\">\r\n          <div\r\n            class=\"custom-slider\"\r\n            *ngIf=\"\r\n              selectedOption[i] == 'morning' ||\r\n              selectedOption[i] == 'doubleshift'\r\n            \"\r\n          >\r\n            <ng5-slider\r\n              [(value)]=\"value[i]\"\r\n              [(highValue)]=\"highValue[i]\"\r\n              [options]=\"options\"\r\n            ></ng5-slider>\r\n          </div>\r\n          <div\r\n            class=\"custom-slider\"\r\n            *ngIf=\"\r\n              selectedOption[i] == 'afternoon' ||\r\n              selectedOption[i] == 'doubleshift'\r\n            \"\r\n          >\r\n            <ng5-slider\r\n              [(value)]=\"value2[i]\"\r\n              [(highValue)]=\"highValue2[i]\"\r\n              [options]=\"options2\"\r\n            ></ng5-slider>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <button mat-button (click)=\"onClick()\" id=\"submit\">Submit</button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.scss']\n})\nexport class HomePageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container_row\">\n  <div class=\"layer1\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\n      <path\n        fill=\"#e7008a\"\n        fill-opacity=\"1\"\n        d=\"M0,160L80,154.7C160,149,320,139,480,122.7C640,107,800,85,960,90.7C1120,96,1280,128,1360,144L1440,160L1440,320L1360,320C1280,320,1120,320,960,320C800,320,640,320,480,320C320,320,160,320,80,320L0,320Z\"\n      ></path>\n    </svg>\n  </div>\n  <div class=\"layer2 text-light\">\n    <h1>working hours</h1>\n  </div>\n\n  <div class=\"text-center container\">\n    <mat-tab-group mat-align-tabs=\"center\">\n      <mat-tab label=\"signIn\"> <app-sign-in> </app-sign-in></mat-tab>\n      <mat-tab label=\"signUp\"> <app-sign-up></app-sign-up></mat-tab>\n    </mat-tab-group>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../shared/user';\nimport { Router } from '@angular/router';\nimport { UserService } from '../../services/user.service';\nimport { FormControl, Validators, FormGroup } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.scss'],\n})\nexport class SignInComponent implements OnInit {\n  profileForm = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required]),\n  });\n\n  constructor(\n    public userService: UserService,\n    private router: Router,\n    private toastrService: ToastrService\n  ) {}\n\n  serverErrorMessages: boolean;\n  submitted: boolean;\n  ngOnInit(): void {\n    // if (this.userService.isLoggedIn()) this.router.navigate(['/addpost']);\n  }\n  onSubmit(form: FormGroup) {\n    this.submitted = true;\n    this.userService.login(form.value).subscribe(\n      (res) => {\n        this.userService.setToken(res['token']);\n        this.showSuccess();\n        this.goToDashboard();\n      },\n      (err) => {\n        if (err.error.statusCode == 500) this.showUserError();\n        else this.showServerError();\n      }\n    );\n  }\n  goToDashboard() {\n    this.router.navigateByUrl('/addpost');\n  }\n\n  showSuccess() {\n    this.toastrService.success('you have signed in successfully', 'success', {\n      timeOut: 2000,\n    });\n  }\n  showServerError() {\n    this.toastrService.error(\n      'something went wrong check your password',\n      'server error',\n      {\n        timeOut: 3000,\n      }\n    );\n  }\n  showUserError() {\n    this.toastrService.error('user does not exist', 'server error', {\n      timeOut: 3000,\n    });\n  }\n}\n","<form [formGroup]=\"profileForm\" (ngSubmit)=\"onSubmit(profileForm)\">\n  <mat-form-field>\n    <mat-label>Email</mat-label>\n    <input placeholder=\"Email\" type=\"email\" matInput formControlName=\"email\" />\n    <!-- <mat-error *ngIf=\"email.invalid && email.touched\">\n      invalid email\n    </mat-error> -->\n  </mat-form-field>\n\n  <mat-form-field>\n    <mat-label>Password</mat-label>\n    <input\n      placeholder=\"Password\"\n      type=\"password\"\n      matInput\n      formControlName=\"password\"\n    />\n  </mat-form-field>\n\n  <button mat-button color=\"accent\" type=\"submit\">Submit</button>\n\n  <mat-error *ngIf=\"!profileForm.valid && submitted\"\n    >check your email and password!!</mat-error\n  >\n\n  <mat-error *ngIf=\"serverErrorMessages\">user not found</mat-error>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../services/user.service';\nimport { FormControl, Validators, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss'],\n})\nexport class SignUpComponent implements OnInit {\n  serverErrorMessages: boolean;\n  submitted: boolean;\n  profileForm = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required]),\n    name: new FormControl('', [Validators.required]),\n  });\n  ngOnInit(): void {}\n  constructor(\n    public userService: UserService,\n    private router: Router,\n    private toastrService: ToastrService\n  ) {}\n\n  onSubmit(form: FormGroup) {\n    this.submitted = true;\n    this.userService.createUser(form.value).subscribe(\n      (data) => {\n        this.showSuccess();\n        form.reset();\n      },\n      (err) => {\n        if (err.error.statusCode == 500) this.showUserError();\n        else this.showServerError();\n      }\n    );\n  }\n  get email() {\n    return this.profileForm.get('email');\n  }\n  get name() {\n    return this.profileForm.get('name');\n  }\n  get password() {\n    return this.profileForm.get('password');\n  }\n  showSuccess() {\n    this.toastrService.success('you have signed up successfully', 'success', {\n      timeOut: 2000,\n    });\n  }\n  showServerError() {\n    this.toastrService.error('something went wrong', 'server error', {\n      timeOut: 3000,\n    });\n  }\n  showUserError() {\n    this.toastrService.error('user already exists', 'server error', {\n      timeOut: 3000,\n    });\n  }\n}\n","<form\n  [formGroup]=\"profileForm\"\n  (ngSubmit)=\"profileForm.valid && onSubmit(profileForm)\"\n>\n  <mat-form-field>\n    <mat-label>Full Name</mat-label>\n    <input\n      placeholder=\"Full Name\"\n      type=\"text\"\n      matInput\n      formControlName=\"name\"\n    />\n    <mat-error *ngIf=\"name.invalid && name.touched\">\n      name required\n    </mat-error>\n  </mat-form-field>\n\n  <mat-form-field>\n    <mat-label>Email</mat-label>\n    <input placeholder=\"Email\" type=\"email\" matInput formControlName=\"email\" />\n    <mat-error *ngIf=\"email.invalid && email.touched\">\n      invalid email\n    </mat-error>\n  </mat-form-field>\n\n  <mat-form-field>\n    <mat-label>Password</mat-label>\n    <input\n      placeholder=\"Password\"\n      type=\"password\"\n      matInput\n      formControlName=\"password\"\n    />\n    <mat-error *ngIf=\"password.invalid && password.touched\">\n      password required\n    </mat-error>\n  </mat-form-field>\n\n  <button mat-button color=\"accent\" type=\"submit\">Submit</button>\n\n  <mat-error *ngIf=\"serverErrorMessages\">server error try again</mat-error>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { PostService } from '../../services/post.service';\nimport { post } from '../../shared/post';\nimport { posts } from '../../shared/posts';\nimport { UserService } from '../../services/user.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-view-posts',\n  templateUrl: './view-posts.component.html',\n  styleUrls: ['./view-posts.component.scss'],\n})\nexport class ViewPostsComponent implements OnInit {\n  posts: any;\n  constructor(\n    private postService: PostService,\n    private userService: UserService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.readPosts();\n  }\n  readPosts() {\n    this.postService.getPosts().subscribe(\n      (data) => {\n        this.posts = data;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n  logout() {\n    this.userService.deleteToken();\n\n    this.router.navigateByUrl('/home');\n  }\n}\n","<mat-toolbar color=\"primary\" class=\".navbar\">\r\n  <h1>Add Working hours</h1>\r\n  <div class=\"spacer\"></div>\r\n  <a mat-button routerLink=\"/addpost\" routerLinkActive=\"active\">addPost</a>\r\n\r\n  <a mat-button (click)=\"logout()\">Logout</a>\r\n</mat-toolbar>\r\n<div class=\"row flex-row container\">\r\n  <div class=\"col-6 postCard\" *ngFor=\"let post of posts\">\r\n    <mat-card>\r\n      <mat-card-title> working hours</mat-card-title>\r\n\r\n      <mat-card-content *ngFor=\"let pp of post.working_hours\">\r\n        <p *ngIf=\"pp.start && !pp.start2\">\r\n          <strong>{{ pp.day }} :</strong> {{ pp.start }} am ---->{{ pp.end }} am\r\n        </p>\r\n        <p *ngIf=\"pp.start2 && !pp.start\">\r\n          <strong>{{ pp.day }} :</strong> {{ pp.start2 | changeTime }} pm\r\n          ---->{{ pp.end2 | changeTime }}\r\n          pm\r\n        </p>\r\n        <p *ngIf=\"pp.start2 && pp.start\">\r\n          <strong>{{ pp.day }} :</strong> {{ pp.start }} am -->{{ pp.end }} am\r\n          <strong>AND</strong> {{ pp.start2 | changeTime }} pm -->{{\r\n            pp.end2 | changeTime\r\n          }}\r\n          pm\r\n        </p>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PostService {\n  constructor(private http: HttpClient) {}\n  createPost(post) {\n    return this.http.post('post', post);\n  }\n  getPosts() {\n    return this.http.get('post');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { User } from '../shared/user';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  selectedUser: User = {\n    email: '',\n    password: '',\n    id: '',\n  };\n  noAuthHeader = { headers: new HttpHeaders({ NoAuth: 'True' }) };\n  constructor(private http: HttpClient) {}\n  createUser(user: User) {\n    return this.http.post('auth/signup', user);\n  }\n  login(authCredentials) {\n    return this.http.post('auth/login', authCredentials, this.noAuthHeader);\n  }\n\n  getUserProfile() {\n    return this.http.get('getuser');\n  }\n  //token field\n  setToken(token: string) {\n    localStorage.setItem('token', token);\n  }\n\n  getToken() {\n    return localStorage.getItem('token');\n  }\n\n  deleteToken() {\n    localStorage.removeItem('token');\n  }\n\n  getUserPayload() {\n    let token = this.getToken();\n    if (token) {\n      let userPayload = atob(token.split('.')[1]);\n      return JSON.parse(userPayload);\n    } else return null;\n  }\n\n  isLoggedIn() {\n    let userPayload = this.getUserPayload();\n    if (userPayload) return userPayload.exp > Date.now() / 1000;\n    else return false;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}